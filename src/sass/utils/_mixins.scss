/* _mixins.scss */
@use "_config" as *;
@use "_functions" as *;
@use "sass:math";

/* ---------------------------------------------------------------------
 _mixins contains a collection of commonly used mixins, most of which require args.
------------------------------------------------------------------------ */

/* ---------------------------------------------------------------------
 Calculations
 @include calc('width', '100% - value');
------------------------------------------------------------------------ */
@mixin calc($key, $value) {
	$calc-vendors: -webkit-calc, -moz-calc;
	@each $vendor in $calc-vendors {
    	#{$key}: #{$vendor}(#{$value});
    }
	#{$key}: calc(#{$value});
}

/* ---------------------------------------------------------------------
 Custom Input Field
------------------------------------------------------------------------ */
@mixin customInput() {
    display: block;
    margin: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    opacity: 0;
    z-index: 2;

    @media (hover: hover) {
        &:hover {
            cursor: pointer;
        }
    }
}

/* ---------------------------------------------------------------------
 Custom Scrollbar
------------------------------------------------------------------------ */
@mixin customScrollbar($colors...) {

    $color-count: length($colors);
    $color-thumb: if($color-count >= 1,nth($colors,1),null);
    $color-track: if($color-count >= 2,nth($colors,2),null);

    &::-webkit-scrollbar {
        width: 10px;
        height: 10px;
    }
    
    &::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background: if($color-thumb,$color-thumb,transparent);
    }
    
    &::-webkit-scrollbar-track {
        background: if($color-track,$color-track,transparent);
    }

}

/* ---------------------------------------------------------------------
 Gradient Fade
------------------------------------------------------------------------ */
@mixin gradientBox($gradient,$height) {
    content: "";
    background: $gradient;
    width: 100%;
    height: $height;
    position: absolute;
    z-index: 1;
    right: 0;
    left: 0;
}

@mixin gradientFade($direction:null,$height:null, $colors...) {

    $direction: if($direction,$direction,'top');
    $height: if($height,$height,8em);

    // NOTE:  parent container should be positioned relatively
    $color-count: length($colors);
    $color-primary: if($color-count >= 1,nth($colors,1),#FFF);
    $color-secondary: if($color-count >= 2,nth($colors,2),#FFF);
    $gradient: linear-gradient($color-primary 0%,$color-secondary 70%,transparent 100%);

    @if $direction == 'top' {
        &::before {
            @include gradientBox($gradient,$height);
            top: 0;
        }
    }

    @if $direction == 'bottom' {
        &::after {
            @include gradientBox($gradient,$height);
            bottom: 0;
            transform: rotate(180deg);
        }
    }
           
}

/* ---------------------------------------------------------------------
 Positioning
------------------------------------------------------------------------ */
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

/* ---------------------------------------------------------------------
 Animations
 Usage:
 @include keyframes(fade-in) {
    0% { opacity: 0; }
    100% { opacity: 1; }
 }
 @include animation(3s ease 0s normal forwards 1 fade-in);
------------------------------------------------------------------------ */
@mixin keyframes($animation-name) {

    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }

}

@mixin animation($str) {
    -webkit-animation: #{$str};
    animation: #{$str};
}

